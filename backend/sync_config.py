from backend.utils import load_config

TARGET_FILE = '../code/private_const.py'


def main():
    cfg = load_config()
    iot = cfg['iot']

    with open(TARGET_FILE, 'w') as f:
        f.write("# This file is auto-generated by sync_config.py\n")
        for key, value in iot.items():
            const_name = key.upper()
            print(f"Syncing {key!r} -> {const_name}")
            if isinstance(value, str):
                f.write(f"{const_name} = '{value}'\n")
            elif isinstance(value, (int, float)):
                f.write(f"{const_name} = {value}\n")
            else:
                raise ValueError(f"Unsupported type for key '{key}': {type(value)}")
    print(f"Configuration synced to {TARGET_FILE} successfully. Total {len(iot)} items.")

if __name__ == "__main__":
    main()
